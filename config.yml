data:
  neurons: &neurons
    val: 10
  time_steps: &time_steps 
    val: 1000
  no_samples: 3000
  jitter: 0.0
  min_isi: 1
  max_isi: 10
  min_rate: 5
  max_rate: 20

  batch_size: 256
  shuffle: True
  prefetch: 16

model:
  features: *neurons
  neurons_hidden_1: 1024
  neurons_hidden_2: 512
  neurons_out: 2
  neuron_beta: 0.8
  time_steps: *time_steps

  # hyperparameters
  loss:
    # loss functions taken from snntorch
    # available losses: 
      # ce_temporal: [arg: invers]
      # ce_rate: [arg: none]
      # mse_temporal: [arg: tolerance]
      # mse_rate: [arg: correct_rate, incorrect_rate]
    type: "ce_temporal"
    correct_rate: null
    inverse: "reciprocal"
    incorrect_rate: null
    tolerance: null

  accuracy:
    # available accuracies: rate, temporal
    type: "temporal"
  
  optimiser:
    # available optimisers: adam
    type: "adam" 
    learning_rate: 0.03
    betas: [0.9, 0.99]

  surrogate:
    # available in snntorch: 
    # atan [arg: alpha]
    # fast_sigmoid [arg: slope]
    # heavside [arg: None]
    # sigmoid [arg: slope]
    # spike_rate_escape [args: beta, slope]
    # straight_through [arg: None]
    # triangular [arg: threshold]
    type: "sigmoid"
    alpha: null
    beta: null
    slope: 25
    threshold: null

  # training parameters
  epochs: 5
  # partial training/testing in minibatches
  partial_training: 50
  partial_testing: 10

  # record hidden layers?
  samples: 10